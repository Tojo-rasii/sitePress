
Pour mettre en œuvre la fonction de recherche avec la possibilité de filtrer les articles par type et rediriger vers une nouvelle page avec un événement keydown sur l'élément <input type="search">, vous pouvez ajuster votre code JavaScript comme suit :

JavaScript :

javascript
Copy code
// Sélectionnez l'élément de recherche
const searchInput = document.getElementById('search');

// Ajoutez un gestionnaire d'événements à l'élément de recherche pour réagir à l'entrée de l'utilisateur
searchInput.addEventListener('input', filterArticles);

// Fonction pour filtrer les articles en fonction de la recherche
function filterArticles() {
    // Récupérez la valeur de la recherche
    const searchTerm = searchInput.value.toLowerCase();

    // Sélectionnez le conteneur où vous avez ajouté les articles
    const newsContainer = document.getElementById('newsContainer');

    // Supprimez tous les articles existants du conteneur
    newsContainer.innerHTML = '';

    // Utilisez forEach pour itérer sur chaque objet d'article
    newsData.forEach(article => {
        // Vérifiez si le terme de recherche correspond au type de l'article
        if (article.type.toLowerCase().includes(searchTerm)) {
            // Créez un nouvel élément div pour chaque article
            const divElement = document.createElement('div');
            // Ajoutez une classe CSS basée sur le type d'article
            divElement.classList.add(article.type.toLowerCase());

            // Structure HTML de chaque article
            divElement.innerHTML = `
                <article>
                    <picture>
                        <img src="${article.imageUrl}" alt="image">
                    </picture>
                </article>
                <article>
                    <span>${article.type}</span>
                    <span>${article.title}</span>
                    <span>${article.description}</span>
                    <p class="voir-plus" data-type="${article.type}" data-title="${article.title}" data-description="${article.description}" data-publishDate="${article.publishDate}">..voir plus</p>
                    <span>Publier le ${article.publishDate}</span>
                </article>
            `;
            // Ajoutez un gestionnaire de clic à l'élément "voir plus"
            const voirPlusElement = divElement.querySelector('.voir-plus');
            voirPlusElement.addEventListener('click', () => redirectToArticle(article));

            // Ajoutez le nouvel élément div au conteneur
            newsContainer.appendChild(divElement);
        }
    });
}

// Fonction pour rediriger vers la nouvelle page avec les informations sur l'article
function redirectToArticle(article) {
    // Créez une URL avec les informations de l'article
    const url = `article.html?type=${article.type}&title=${encodeURIComponent(article.title)}&description=${encodeURIComponent(article.description)}&publishDate=${article.publishDate}`;

    // Redirigez vers la nouvelle page
    window.location.href = url;
}
Cette mise à jour ajoute un gestionnaire d'événements à l'élément de recherche qui réagit à chaque entrée de l'utilisateur. La fonction filterArticles est appelée à chaque entrée et filtre les articles en fonction de la recherche. Les articles qui ne correspondent pas à la recherche sont exclus du conteneur, et seuls ceux qui correspondent sont affichés. Lorsque l'utilisateur clique sur "Voir plus", il est redirigé vers la page article.html avec les informations sur l'article correspondant.





